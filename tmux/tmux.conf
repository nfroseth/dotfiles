# Configured by Xophules copied from Rob Muhlestein,
# and other ... to name a few
# This file is copyright free (public domain).

# fix accidently typing accent characters, etc.
# by forcing the terminal to not wait around
# (every single tmux file should have this)
set -sg escape-time 0

# change default meta key to same as screen
unbind C-b
unbind C-a
set -g prefix C-a
# Consider binding to C-Space

# form vim/tmux d/y buffer sync
set -g focus-events on

# Turn on the mouse
set -g mouse on

#  Primeagen Copying across tmux windows? Clip Board management
# set-window-option -g mode-keys vi
# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# use a different prefix for nested
bind-key -n C-y send-prefix 

# add double-tap meta key to toggle last window
bind-key C-a last-window

# pane colors and display

# create more intuitive split key combos (same as modern screen)
unbind |
bind | split-window -h
bind '\' split-window -h
bind 'C-\' split-window -h
unbind -
bind - split-window -v
unbind _
bind _ split-window -v

# kill current window and all panes
bind-key & kill-window

# vi for copy mode
setw -g mode-keys vi

# vi for command status
set -g status-keys vi

# vi keys to resize
bind -r C-k resize-pane -U 5
bind -r C-j resize-pane -D 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5
# bind-key J resize-pane -D 5
# bind-key K resize-pane -U 5
# bind-key H resize-pane -L 5
# bind-key L resize-pane -R 5

# vi keys to navigate panes
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# customize create new window for streaming
# unbind C-c
# bind C-c new-window \; split-window -h \; select-pane -t 2 \; resize-pane -x 19 \; send "blankpane" Enter \; select-pane -t 1
 
set -g repeat-time 200

# colors, clock, and stuff
set -g default-terminal "xterm-256color" # works, but oh so wrong
set -ga terminal-overrides ",xterm-256color*:Tc"
#set -g default-terminal "screen-256color"
set -g clock-mode-style 12
setw -g clock-mode-colour cyan
# start numbering windows from 1 instead of zero
set -g base-index 1
# make pane numbering consistent with windows
setw -g pane-base-index 1

# die, die, die (just be careful, right next to C-c)
# bind -r C-x confirm kill-server
# bind -r x kill-pane

# color the pane borders nearly invisible
# (when not using hacked tmux without them)
set -g pane-border-style "fg=#171717"
set -g pane-active-border-style "fg=#171717"

# color of the window selection background
set -g mode-style "bg=black"

# reload configuration
bind -r r source-file ~/.tmux.conf \; display "Reloaded!"
source ~/.tmux/tmuxline/default.tmux.conf
# source ~/.tmux/tmuxline/everforest-dark.tmux.conf

# disable status
#set -g status off
set -g status on

# Primeagen method of setting specific paths on hard coded keys
# bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"

# forget the find window.  That is for chumps
# bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

# bind-key -r i run-shell "tmux neww tmux-cht.sh"
# bind-key -r G run-shell "~/.local/bin/tmux-sessionizer ~/work/nrdp"
# bind-key -r C run-shell "~/.local/bin/tmux-sessionizer ~/work/tvui"
# bind-key -r R run-shell "~/.local/bin/tmux-sessionizer ~/work/milo"
# bind-key -r L run-shell "~/.local/bin/tmux-sessionizer ~/work/hpack"
# bind-key -r H run-shell "~/.local/bin/tmux-sessionizer ~/personal/vim-with-me"
# bind-key -r T run-shell "~/.local/bin/tmux-sessionizer ~/personal/refactoring.nvim"
# bind-key -r N run-shell "~/.local/bin/tmux-sessionizer ~/personal/harpoon"
# bind-key -r S run-shell "~/.local/bin/tmux-sessionizer ~/personal/developer-productivity"

# Have new windows and panes open in the current directory
# bind '"' split-window -c '#{pane_current_path}'
# bind %   split-window -c '#{pane_current_path}' -h
# bind c   new-window   -c '#{pane_current_path}'
# bind-key N run-shell 'TMUX= tmux new-session -d \; switch-client -n'
# bind-key C run-shell 'TMUX= tmux new-session -t $(tmux display-message -p #S) -s $(tmux display-message -p #S-clone) -d \; switch-client -n \; display-message "session #S cloned"'
